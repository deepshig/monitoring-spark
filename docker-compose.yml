version: "3.2"

# list of containers to be run
services:
  # rabbit_mq container uses the default rabbitmq image
  # exposes the ports
  # uses the specified volume
  rabbit_mq:
    # we use management image to get the
    # plugin for web dashboard
    image: rabbitmq:3.8-rc-management
    container_name: rabbit_mq
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbit_mqdata:/usr/share/rabbitmq/data

  cassandra_node1:
    image: cassandra:3.11.6
    container_name: cassandra_node1
    command: /bin/bash -c "/docker-entrypoint.sh cassandra -f"
    volumes:
      - ./cassandra_node1:/var/lib/cassandra
    environment:
      CASSANDRA_CLUSTER_NAME: monitoring_cluster
      CASSANDRA_SEEDS: cassandra_node1
    # Exposing ports for intra cluster communication
    expose:
      - 7000 # Intra-node communication
      - 7001 # TLS intra-node communication
      - 7199 # JMX
      - 9042 # CQL
      - 9160 # Thrift service
    ports:
      - 9042:9042
      - 7199:7199
      - 9160:9160
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000

  cassandra_node2:
    image: cassandra:3.11.6
    container_name: cassandra_node2
    command: /bin/bash -c "echo 'Waiting for seed node' && sleep 30 && /docker-entrypoint.sh cassandra -f"
    volumes:
      - ./cassandra_node2:/var/lib/cassandra
    environment:
      CASSANDRA_CLUSTER_NAME: monitoring_cluster
      CASSANDRA_SEEDS: cassandra_node1
    depends_on:
      - cassandra_node1
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000

  cassandra_node3:
    image: cassandra:3.11.6
    container_name: cassandra_node3
    command: /bin/bash -c "echo 'Waiting for seed node' && sleep 30 && /docker-entrypoint.sh cassandra -f"
    volumes:
      - ./cassandra_node3:/var/lib/cassandra
    environment:
      CASSANDRA_CLUSTER_NAME: monitoring_cluster
      CASSANDRA_SEEDS: cassandra_node1
    depends_on:
      - cassandra_node1
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000

  data_generator:
    build:
      context: ./
      dockerfile: ./data_generator/Dockerfile
    container_name: data_generator
    depends_on:
      - rabbit_mq
    environment:
      AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
    volumes:
      - ./data_generator:/usr/src/app/data_generator

  metrics_computer:
    build:
      context: ./
      dockerfile: ./metrics_computer/Dockerfile
    container_name: metrics_computer
    depends_on:
      - rabbit_mq
      - cassandra_node1
      - cassandra_node2
      - cassandra_node3
    command: /bin/bash -c "echo 'Waiting for cassandra and rabbitmq to run' && sleep 75 && python consumer.py"
    environment:
      AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
    volumes:
      - ./metrics_computer:/usr/src/app/metrics_computer

  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer-data:/data
    # Enable you to access potainers web interface from your host machine
    # using http://localhost:10001
    ports:
      - "10001:9000"

volumes:
    rabbit_mqdata:
      driver: local
